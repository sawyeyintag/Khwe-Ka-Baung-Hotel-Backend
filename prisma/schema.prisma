// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// ----------- Item -----------
model Floor {
  floorNumber Int    @id
  totalRooms  Int
  rooms       Room[]
}

model RoomType {
  id    Int    @id @default(autoincrement())
  name  String
  price Float
  pax   Int
  rooms Room[]
}

model RoomStatus {
  id    Int    @id @default(autoincrement())
  label String
  rooms Room[]
}

model Room {
  roomNumber     Int       @id
  floorNumber    Int
  roomTypeId     Int
  statusId       Int
  guestId        String?
  numOfGuests    Int?
  numExtraBed    Int?
  actualCheckIn  DateTime?
  actualCheckOut DateTime?

  floor    Floor      @relation(fields: [floorNumber], references: [floorNumber])
  roomType RoomType   @relation(fields: [roomTypeId], references: [id])
  status   RoomStatus @relation(fields: [statusId], references: [id])
  guest    Guest?     @relation(fields: [guestId], references: [id])
  miniBar  MiniBar?
  bookings Booking[]
  receipts Receipt[]
}

model MiniBar {
  id         Int           @id @default(autoincrement())
  roomNumber Int           @unique
  room       Room          @relation(fields: [roomNumber], references: [roomNumber])
  items      MiniBarItem[]
}

model Item {
  id    Int    @id @default(autoincrement())
  name  String
  price Float

  miniBarItems      MiniBarItem[]
  inventory         Inventory[]
  additionalCharges AddChargeItem[]
}

model MiniBarItem {
  miniBarId Int
  itemId    Int
  quantity  Int

  miniBar MiniBar @relation(fields: [miniBarId], references: [id])
  item    Item    @relation(fields: [itemId], references: [id])

  @@id([miniBarId, itemId])
}

model Inventory {
  id       Int @id @default(autoincrement())
  itemId   Int
  quantity Int

  item Item @relation(fields: [itemId], references: [id])
}

model Booking {
  id           Int      @id @default(autoincrement())
  roomNumber   Int
  guestId      String
  contactName  String
  contactPhone String
  estCheckIn   DateTime
  estCheckOut  DateTime

  room  Room  @relation(fields: [roomNumber], references: [roomNumber])
  guest Guest @relation(fields: [guestId], references: [id])
}

model Guest {
  id         String @id
  name       String
  phone      String
  address    String
  nicCardNum String

  rooms    Room[]
  bookings Booking[]
  receipts Receipt[]
}

model Receipt {
  id         Int    @id @default(autoincrement())
  roomNumber Int
  guestId    String
  totalPrice Float
  amountPaid Float
  paidBy     String

  room              Room                      @relation(fields: [roomNumber], references: [roomNumber])
  guest             Guest                     @relation(fields: [guestId], references: [id])
  additionalCharges AdditionalChargeReceipt[]
}

model AdditionalChargeReceipt {
  id           Int      @id @default(autoincrement())
  receiptId    Int
  purchaseDate DateTime

  receipt           Receipt            @relation(fields: [receiptId], references: [id])
  restaurantReceipt RestaurantReceipt?
  items             AddChargeItem[]
  services          AddChargeService[]
}

model RestaurantReceipt {
  id           Int      @id @default(autoincrement())
  addChargeId  Int      @unique
  totalPrice   Float
  purchaseDate DateTime

  additionalCharge AdditionalChargeReceipt @relation(fields: [addChargeId], references: [id])
}

model Service {
  id    Int    @id @default(autoincrement())
  name  String
  price Float

  additionalCharges AddChargeService[]
}

model AddChargeItem {
  addChargeId Int
  itemId      Int
  quantity    Int

  additionalCharge AdditionalChargeReceipt @relation(fields: [addChargeId], references: [id])
  item             Item                    @relation(fields: [itemId], references: [id])

  @@id([addChargeId, itemId])
}

model AddChargeService {
  addChargeId Int
  serviceId   Int
  quantity    Int

  additionalCharge AdditionalChargeReceipt @relation(fields: [addChargeId], references: [id])
  service          Service                 @relation(fields: [serviceId], references: [id])

  @@id([addChargeId, serviceId])
}

model Admin {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
