
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.FloorScalarFieldEnum = {
  floorNumber: 'floorNumber'
};

exports.Prisma.RoomTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  pax: 'pax'
};

exports.Prisma.RoomStatusScalarFieldEnum = {
  id: 'id',
  label: 'label'
};

exports.Prisma.RoomScalarFieldEnum = {
  roomNumber: 'roomNumber',
  floorNumber: 'floorNumber',
  roomTypeId: 'roomTypeId',
  statusId: 'statusId',
  sessionId: 'sessionId'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  roomNumber: 'roomNumber',
  numberOfExtraBeds: 'numberOfExtraBeds',
  actualCheckIn: 'actualCheckIn',
  actualCheckOut: 'actualCheckOut',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GuestScalarFieldEnum = {
  uid: 'uid',
  name: 'name',
  phone: 'phone',
  email: 'email',
  address: 'address',
  nicCardNum: 'nicCardNum',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MiniBarScalarFieldEnum = {
  id: 'id',
  roomNumber: 'roomNumber'
};

exports.Prisma.ItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price'
};

exports.Prisma.MiniBarItemScalarFieldEnum = {
  miniBarId: 'miniBarId',
  itemId: 'itemId',
  quantity: 'quantity'
};

exports.Prisma.InventoryScalarFieldEnum = {
  id: 'id',
  itemId: 'itemId',
  quantity: 'quantity'
};

exports.Prisma.BookingScalarFieldEnum = {
  id: 'id',
  roomNumber: 'roomNumber',
  guestId: 'guestId',
  contactName: 'contactName',
  contactPhone: 'contactPhone',
  contactEmail: 'contactEmail',
  estCheckIn: 'estCheckIn',
  estCheckOut: 'estCheckOut'
};

exports.Prisma.ReceiptScalarFieldEnum = {
  id: 'id',
  roomNumber: 'roomNumber',
  guestId: 'guestId',
  totalPrice: 'totalPrice',
  amountPaid: 'amountPaid',
  paidBy: 'paidBy'
};

exports.Prisma.AdditionalChargeReceiptScalarFieldEnum = {
  id: 'id',
  receiptId: 'receiptId',
  purchaseDate: 'purchaseDate'
};

exports.Prisma.RestaurantReceiptScalarFieldEnum = {
  id: 'id',
  addChargeId: 'addChargeId',
  totalPrice: 'totalPrice',
  purchaseDate: 'purchaseDate'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price'
};

exports.Prisma.AddChargeItemScalarFieldEnum = {
  addChargeId: 'addChargeId',
  itemId: 'itemId',
  quantity: 'quantity'
};

exports.Prisma.AddChargeServiceScalarFieldEnum = {
  addChargeId: 'addChargeId',
  serviceId: 'serviceId',
  quantity: 'quantity'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.RoomTypeOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.RoomStatusOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.GuestOrderByRelevanceFieldEnum = {
  uid: 'uid',
  name: 'name',
  phone: 'phone',
  email: 'email',
  address: 'address',
  nicCardNum: 'nicCardNum'
};

exports.Prisma.ItemOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.BookingOrderByRelevanceFieldEnum = {
  guestId: 'guestId',
  contactName: 'contactName',
  contactPhone: 'contactPhone',
  contactEmail: 'contactEmail'
};

exports.Prisma.ReceiptOrderByRelevanceFieldEnum = {
  guestId: 'guestId',
  paidBy: 'paidBy'
};

exports.Prisma.ServiceOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password'
};


exports.Prisma.ModelName = {
  Floor: 'Floor',
  RoomType: 'RoomType',
  RoomStatus: 'RoomStatus',
  Room: 'Room',
  Session: 'Session',
  Guest: 'Guest',
  MiniBar: 'MiniBar',
  Item: 'Item',
  MiniBarItem: 'MiniBarItem',
  Inventory: 'Inventory',
  Booking: 'Booking',
  Receipt: 'Receipt',
  AdditionalChargeReceipt: 'AdditionalChargeReceipt',
  RestaurantReceipt: 'RestaurantReceipt',
  Service: 'Service',
  AddChargeItem: 'AddChargeItem',
  AddChargeService: 'AddChargeService',
  Admin: 'Admin'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
